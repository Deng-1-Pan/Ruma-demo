# 最小化构建 - 专门解决云端构建问题
FROM node:18-alpine as build

# 安装必要的构建工具
RUN apk add --no-cache python3 make g++

# 设置工作目录
WORKDIR /app

# 设置npm配置
RUN npm config set registry https://registry.npmmirror.com/ && \
    npm config set fund false && \
    npm config set audit false && \
    npm config set unsafe-perm true

# 复制package.json
COPY package.json ./

# 安装依赖 - 使用yarn作为替代方案
RUN npm install -g yarn && \
    yarn config set registry https://registry.npmmirror.com/ && \
    yarn install --frozen-lockfile --ignore-optional --network-timeout 300000

# 复制源代码
COPY . .

# 使用最简单的构建命令
RUN yarn build:fast

# 生产环境
FROM nginx:alpine

# 复制构建文件
COPY --from=build /app/dist /usr/share/nginx/html

# 复制nginx配置
COPY nginx.conf /etc/nginx/nginx.conf

# 暴露端口
EXPOSE 80

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:80/ || exit 1

# 启动
CMD ["nginx", "-g", "daemon off;"] 